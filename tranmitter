#include <WiFi.h>
#include <esp_now.h>
#include <esp_wifi.h>

// Receiver MAC address
uint8_t receiverAddress[] = {0x34, 0xAB, 0x95, 0x42, 0x47, 0x74}; // Replace with actual MAC

const int VRxPin = 34;  // X-axis
const int VRyPin = 35;  // Y-axis

typedef struct struct_message {
  int x;
  int y;
} struct_message;

struct_message outgoingData;

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  esp_wifi_set_promiscuous(true);
  esp_wifi_set_channel(1, WIFI_SECOND_CHAN_NONE);
  esp_wifi_set_promiscuous(false);

  if (esp_now_init() != ESP_OK) {
    Serial.println("ESP-NOW init failed");
    while (true);
  }

  esp_now_peer_info_t peerInfo = {};
  memcpy(peerInfo.peer_addr, receiverAddress, 6);
  peerInfo.channel = 1;
  peerInfo.encrypt = false;
  esp_now_add_peer(&peerInfo);

  Serial.println("Transmitter ready");
}

void loop() {
  outgoingData.x = analogRead(VRxPin);
  outgoingData.y = analogRead(VRyPin);

  // Debug
  Serial.printf("X:%d,Y:%d\n", outgoingData.x, outgoingData.y);

  esp_now_send(receiverAddress, (uint8_t*)&outgoingData, sizeof(outgoingData));
  // No delay: send as fast as possible
}
